# ============================================================
# CELDA PARA INSERTAR EN EL NOTEBOOK cnn2d_training.ipynb
# ============================================================

"""
INSTRUCCIONES:
1. Copia este c√≥digo
2. Ins√©rtalo como una NUEVA CELDA despu√©s de la celda de configuraci√≥n (Cell 3)
3. Ejecuta la celda
4. Cambia USE_IBARRA_HYPERPARAMETERS = True/False seg√∫n quieras usar Ibarra o Optuna
"""

# ============================================================
# SELECTOR DE HIPERPAR√ÅMETROS: IBARRA vs OPTUNA
# ============================================================

"""
Esta celda permite elegir entre usar los hiperpar√°metros exactos del paper de Ibarra
o los mejores hiperpar√°metros encontrados por Optuna.

USO:
1. Para usar par√°metros de Ibarra: USE_IBARRA_HYPERPARAMETERS = True
2. Para usar par√°metros de Optuna: USE_IBARRA_HYPERPARAMETERS = False
"""

# ============================================================
# CONFIGURACI√ìN - CAMBIA ESTE VALOR SEG√öN LO QUE QUIERAS USAR
# ============================================================

# üîß CONFIGURACI√ìN PRINCIPAL
USE_IBARRA_HYPERPARAMETERS = True  # True = Ibarra, False = Optuna

# ============================================================
# IMPORTAR SISTEMA DE CONFIGURACI√ìN
# ============================================================

import sys
from pathlib import Path

# Agregar m√≥dulos al path
project_root = Path.cwd().parent
sys.path.insert(0, str(project_root))

from modules.core.hyperparameter_config import (
    HyperparameterManager,
    compare_hyperparameters,
)

# ============================================================
# CARGAR HIPERPAR√ÅMETROS SEG√öN CONFIGURACI√ìN
# ============================================================

print("=" * 80)
print("üîß SELECTOR DE HIPERPAR√ÅMETROS")
print("=" * 80)

# Crear manager
manager = HyperparameterManager()

# Obtener hiperpar√°metros seg√∫n configuraci√≥n
if USE_IBARRA_HYPERPARAMETERS:
    print("üìö Usando hiperpar√°metros del PAPER DE IBARRA 2023")
    hyperparameters = manager.get_ibarra_hyperparameters()
    source = "Paper Ibarra 2023"
else:
    print("üîç Usando mejores hiperpar√°metros de OPTUNA")
    hyperparameters = manager.get_optuna_hyperparameters()
    source = "Optuna Optimizado"

print(f"‚úÖ Fuente: {source}")

# ============================================================
# MOSTRAR PAR√ÅMETROS SELECCIONADOS
# ============================================================

print(f"\nüìä PAR√ÅMETROS SELECCIONADOS:")
print("-" * 50)

# Par√°metros de arquitectura
print("üèóÔ∏è  ARQUITECTURA:")
print(f"   ‚Ä¢ kernel_size_1: {hyperparameters['kernel_size_1']}")
print(f"   ‚Ä¢ kernel_size_2: {hyperparameters['kernel_size_2']}")
print(f"   ‚Ä¢ filters_1: {hyperparameters['filters_1']}")
print(f"   ‚Ä¢ filters_2: {hyperparameters['filters_2']}")
print(f"   ‚Ä¢ dense_units: {hyperparameters['dense_units']}")
print(f"   ‚Ä¢ p_drop_conv: {hyperparameters['p_drop_conv']}")
print(f"   ‚Ä¢ p_drop_fc: {hyperparameters['p_drop_fc']}")

# Par√°metros de entrenamiento
print("\nüöÄ ENTRENAMIENTO:")
print(f"   ‚Ä¢ batch_size: {hyperparameters['batch_size']}")
print(f"   ‚Ä¢ learning_rate: {hyperparameters['learning_rate']}")
print(f"   ‚Ä¢ momentum: {hyperparameters['momentum']}")
print(f"   ‚Ä¢ weight_decay: {hyperparameters['weight_decay']}")
print(f"   ‚Ä¢ n_epochs: {hyperparameters['n_epochs']}")
print(f"   ‚Ä¢ early_stopping_patience: {hyperparameters['early_stopping_patience']}")

# Par√°metros del scheduler
print("\nüìà SCHEDULER:")
print(f"   ‚Ä¢ step_size: {hyperparameters['step_size']}")
print(f"   ‚Ä¢ gamma: {hyperparameters['gamma']}")
print(f"   ‚Ä¢ optimizer: {hyperparameters['optimizer']}")

# ============================================================
# COMPARACI√ìN (OPCIONAL)
# ============================================================

if not USE_IBARRA_HYPERPARAMETERS:
    print(f"\nüìä COMPARACI√ìN CON IBARRA:")
    print("-" * 50)

    ibarra_params = manager.get_ibarra_hyperparameters()

    # Comparar par√°metros clave
    key_params = [
        "kernel_size_1",
        "kernel_size_2",
        "filters_2",
        "dense_units",
        "batch_size",
        "learning_rate",
    ]

    for param in key_params:
        ibarra_val = ibarra_params[param]
        optuna_val = hyperparameters[param]

        if ibarra_val != optuna_val:
            if isinstance(ibarra_val, (int, float)) and isinstance(
                optuna_val, (int, float)
            ):
                diff = optuna_val - ibarra_val
                diff_str = f"{diff:+.3f}" if isinstance(diff, float) else f"{diff:+d}"
                print(
                    f"   ‚Ä¢ {param}: Ibarra={ibarra_val} ‚Üí Optuna={optuna_val} ({diff_str})"
                )
            else:
                print(f"   ‚Ä¢ {param}: Ibarra={ibarra_val} ‚Üí Optuna={optuna_val}")
        else:
            print(f"   ‚Ä¢ {param}: {ibarra_val} (igual)")

# ============================================================
# GUARDAR CONFIGURACI√ìN
# ============================================================

# Guardar configuraci√≥n actual
manager.save_config(use_ibarra=USE_IBARRA_HYPERPARAMETERS)

print(f"\nüíæ Configuraci√≥n guardada:")
print(f"   ‚Ä¢ Usar Ibarra: {USE_IBARRA_HYPERPARAMETERS}")
print(f"   ‚Ä¢ Archivo: config/hyperparameter_config.json")

# ============================================================
# PREPARAR VARIABLES PARA EL RESTO DEL NOTEBOOK
# ============================================================

# Crear variables globales que el resto del notebook puede usar
BEST_PARAMS = hyperparameters
USE_IBARRA = USE_IBARRA_HYPERPARAMETERS
HYPERPARAMETER_SOURCE = source

print(f"\n‚úÖ Variables preparadas:")
print(f"   ‚Ä¢ BEST_PARAMS: Diccionario con hiperpar√°metros")
print(f"   ‚Ä¢ USE_IBARRA: {USE_IBARRA}")
print(f"   ‚Ä¢ HYPERPARAMETER_SOURCE: {HYPERPARAMETER_SOURCE}")

print("=" * 80)
print("üéØ LISTO PARA ENTRENAR CON LOS PAR√ÅMETROS SELECCIONADOS")
print("=" * 80)
